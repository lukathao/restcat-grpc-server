// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: reservations.sql

package db

import (
	"context"
	"database/sql"
)

const createReservation = `-- name: CreateReservation :one
INSERT INTO reservations (
  business_id, guest_name, guests, dining_room, reservation_date, reservation_hours, paid
) VALUES (
  $1, $2, $3, $4, $5, $6, $7
)
RETURNING reservations_id, business_id, guest_name, reservation_date, reservation_hours, guests, dining_room, paid
`

type CreateReservationParams struct {
	BusinessID       sql.NullInt32  `json:"business_id"`
	GuestName        sql.NullString `json:"guest_name"`
	Guests           sql.NullInt16  `json:"guests"`
	DiningRoom       sql.NullBool   `json:"dining_room"`
	ReservationDate  sql.NullString `json:"reservation_date"`
	ReservationHours sql.NullInt16  `json:"reservation_hours"`
	Paid             sql.NullBool   `json:"paid"`
}

func (q *Queries) CreateReservation(ctx context.Context, arg CreateReservationParams) (Reservation, error) {
	row := q.queryRow(ctx, q.createReservationStmt, createReservation,
		arg.BusinessID,
		arg.GuestName,
		arg.Guests,
		arg.DiningRoom,
		arg.ReservationDate,
		arg.ReservationHours,
		arg.Paid,
	)
	var i Reservation
	err := row.Scan(
		&i.ReservationsID,
		&i.BusinessID,
		&i.GuestName,
		&i.ReservationDate,
		&i.ReservationHours,
		&i.Guests,
		&i.DiningRoom,
		&i.Paid,
	)
	return i, err
}
